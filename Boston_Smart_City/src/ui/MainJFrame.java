/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import java.util.concurrent.Executors;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import model.Login;
import model.RaiseComplaint;

/**
 *
 * @author rithvik
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        
        
    }
    
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnRegister = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();
        comboRole = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ComboType = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Email ID :");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 180, 100, 30));

        txtEmail.setBackground(new java.awt.Color(255, 204, 204));
        txtEmail.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(0, 153, 255));
        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 180, 122, 30));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 153, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Select Role :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 280, 120, 30));

        txtPassword.setBackground(new java.awt.Color(255, 204, 204));
        txtPassword.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(51, 153, 255));
        jPanel1.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 230, 122, 30));

        btnRegister.setBackground(new java.awt.Color(0, 102, 255));
        btnRegister.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("Register");
        btnRegister.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 471, 160, 50));

        btnLogin.setBackground(new java.awt.Color(0, 102, 255));
        btnLogin.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Login");
        btnLogin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        jPanel1.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 411, 160, 50));

        comboRole.setBackground(new java.awt.Color(255, 204, 204));
        comboRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "System-Admin", "Enterprise Admin", "Manager", "Staff", "Resident", "Community Admin", "Security Staff", "FeedBack Monitor", " " }));
        comboRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRoleActionPerformed(evt);
            }
        });
        jPanel1.add(comboRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 280, 124, 31));

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 153, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Password :");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 230, 100, 30));

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 153, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Select Type :");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 330, 120, 30));

        ComboType.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.add(ComboType, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 330, 124, 31));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/MainPicture.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1230, 680));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        ResidentProfileJFrame rf = new ResidentProfileJFrame();
        rf.setVisible(true);

        dispose();
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here
        //        String emailid= txtEmail.getText();
//        String password=txtPassword.getText();
//        String option=jComboBox1.getSelectedItem().toString();
//        
       ////////////String option=comboRole.getSelectedItem().toString();
//        Login lg= new Login();
//         lg.setEmail(emailid);
//         lg.setPassword(password);
//         if(lg.getEmail().equals("")||lg.getPassword().equals("")||option.equals("--Select Role--")){
//         JOptionPane.showMessageDialog(rootPane, "Some Fields are empty", "Error", 1);
//         }else{
//            try{
//            
//            }catch(Exception ex){
//            
//            }
//         }
///////////////////rithvik login        
//       try{
//           
//            Class.forName("com.mysql.jdbc.Driver");
//
//            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","root@123");
//
//            
//            con1.setNetworkTimeout(Executors.newFixedThreadPool(5), 5000);
//
//            String emailid= txtEmail.getText();
//            String password=txtPassword.getText();
//            Statement stm= con1.createStatement();
//            Login lg= new Login();
//            lg.setEmail(emailid);
//            lg.setPassword(password);
//            
//            String sql = "select * from personregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' ";
//            String sql1 = "select * from systemadmin where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' ";
//            String sql2="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Enterprise Admin'";
//            String sql3="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Manager'";
//            String sql4="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Worker'";
//            String sql5="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Community Admin'";
//            String sql6="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Security Staff'";
//            
//           
//          
//            if(option.equalsIgnoreCase("Resident")){
//                
//               // String s1= rs.getString("option");
//               rs=stm.executeQuery(sql);
//                if(rs.next()){
//                ResidentComplaintJFrame rc = new ResidentComplaintJFrame();
////                RaiseComplaint rac = new RaiseComplaint();
////                String resId = rc.getDetails(rs.getString(1));
//               
//                rc.txtID2.setText(rs.getString(1));
//                rc.txtID1.setText(rs.getString(1));
//                rc.txtID3.setText(rs.getString(1));
//                rc.txtName.setText(rs.getString(2));
//                rc.txtAge.setText(rs.getString(3));
//               switch(rs.getString(4)){
//                case "male" -> rc.genderGroup.setSelected(rc.btnMale.getModel(), true);
//                case "female" -> rc.genderGroup.setSelected(rc.btnFemale.getModel(), true);
//                case "other" -> rc.genderGroup.setSelected(rc.btnOther.getModel(), true);
//                }
//                
//                rc.txtAddress.setText(rs.getString(5));
//                rc.comboCity1.setSelectedIndex(0);
//                switch(rs.getString(7)){
//                    case "Huntington Ave" -> rc.comboCommunity1.setSelectedIndex(0);
//                    case "Roxbury" -> rc.comboCommunity1.setSelectedIndex(1);
//                    case "South Bay" -> rc.comboCommunity1.setSelectedIndex(2);
//                }
//                rc.txtPhoneNumber.setText(rs.getString(8));
//                rc.txtEmail.setText(rs.getString(9));
//                rc.txtPassword.setText(rs.getString(10));
//                rc.txtConfirmPassword.setText(rs.getString(11));
//                
//                rc.setVisible(true);
//                dispose();
//                con1.close();
//                }
//            }
//                else if(option.equalsIgnoreCase("System-Admin")){
//                
//                    rs=stm.executeQuery(sql1);
//                    if(rs.next())
//                    {
//                        SystemAdminJFrame sa= new SystemAdminJFrame();
//                        sa.setVisible(true);
//                        dispose();
//                        con1.close();
//                    
//                    }
//                }
//                
//                else if(option.equalsIgnoreCase("Enterprise Admin")){
//                
//                    rs=stm.executeQuery(sql2);
//                    if(rs.next())
//                    {
//                        EnterpriseJFrame e= new EnterpriseJFrame();
//                        
//                e.txtID7.setText(rs.getString(1));
//                e.txtID3.setText(rs.getString(1));
//                e.txtName1.setText(rs.getString(5));
//                e.txtAge1.setText(rs.getString(6));
//               switch(rs.getString(7)){
//                case "Male" -> e.genderGroup.setSelected(e.btnMale1.getModel(), true);
//                case "Female" -> e.genderGroup.setSelected(e.btnFemale1.getModel(), true);
//                case "Other" -> e.genderGroup.setSelected(e.btnOther1.getModel(), true);
//                }
//                e.txtEmail1.setText(rs.getString(8));
//                
//                        e.setVisible(true);
//                        dispose();
//                        con1.close();
//                    
//                    }
//                }
//                
//                else if(option.equalsIgnoreCase("Manager")){
//                
//                    rs=stm.executeQuery(sql3);
//                    if(rs.next())
//                    {
//                       ManagerJFrame m=new ManagerJFrame();
//                       
//                       
//                m.txtID8.setText(rs.getString(1));
//                m.txtID3.setText(rs.getString(1));
//                m.txtName1.setText(rs.getString(5));
//                m.txtAge1.setText(rs.getString(6));
//               switch(rs.getString(7)){
//                case "Male" -> m.genderGroup.setSelected(m.btnMale1.getModel(), true);
//                case "Female" -> m.genderGroup.setSelected(m.btnFemale1.getModel(), true);
//                case "Other" -> m.genderGroup.setSelected(m.btnOther1.getModel(), true);
//                }
//               
//                m.txtEmail1.setText(rs.getString(8));
//            
//                       
//                       
//                        m.setVisible(true);
//                        dispose();
//                        con1.close();
//                    
//                    }
//                }
//                
//                 else if(option.equalsIgnoreCase("Staff")){
//                
//                    rs=stm.executeQuery(sql4);
//                    if(rs.next())
//                    {
//                       StaffJFrame s=new StaffJFrame();
//                      
//                s.txtID6.setText(rs.getString(1));
//                s.txtID3.setText(rs.getString(1));
//                s.txtName1.setText(rs.getString(5));
//                s.txtAge1.setText(rs.getString(6));
//               switch(rs.getString(7)){
//                case "Male" -> s.genderGroup.setSelected(s.btnMale1.getModel(), true);
//                case "Female" -> s.genderGroup.setSelected(s.btnFemale1.getModel(), true);
//                case "Other" -> s.genderGroup.setSelected(s.btnOther1.getModel(), true);
//                }
//               
//                s.txtEmail1.setText(rs.getString(8));
//                       
//                        s.setVisible(true);
//                        dispose();
//                        con1.close();
//                    
//                    }
//                }
//                
//                 else if(option.equalsIgnoreCase("Community Admin")){
//                
//                    rs=stm.executeQuery(sql5);
//                    if(rs.next())
//                    {
//                       CommunityAdminJFrame cs=new CommunityAdminJFrame();
//                      
//                cs.txtID5.setText(rs.getString(1));
//                cs.txtID4.setText(rs.getString(1));
//                cs.txtName1.setText(rs.getString(5));
//                cs.txtAge1.setText(rs.getString(6));
//               switch(rs.getString(7)){
//                case "Male" -> cs.genderGroup.setSelected(cs.btnMale1.getModel(), true);
//                case "Female" -> cs.genderGroup.setSelected(cs.btnFemale1.getModel(), true);
//                case "Other" -> cs.genderGroup.setSelected(cs.btnOther1.getModel(), true);
//                }
//               
//                cs.txtEmail1.setText(rs.getString(8));
//                       
//                        cs.setVisible(true);
//                        dispose();
//                        con1.close();
//                    
//                    }
//                }
//                
//                 else if(option.equalsIgnoreCase("Security Staff")){
//                
//                    rs=stm.executeQuery(sql6);
//                    if(rs.next())
//                    {
//                       SecuritySupportStaffJFrame ss=new SecuritySupportStaffJFrame();
//                      
//                ss.txtID3.setText(rs.getString(1));
//                ss.txtID4.setText(rs.getString(1));
//                ss.txtName1.setText(rs.getString(5));
//                ss.txtAge1.setText(rs.getString(6));
//               switch(rs.getString(7)){
//                case "Male" -> ss.genderGroup.setSelected(ss.btnMale1.getModel(), true);
//                case "Female" -> ss.genderGroup.setSelected(ss.btnFemale1.getModel(), true);
//                case "Other" -> ss.genderGroup.setSelected(ss.btnOther1.getModel(), true);
//                }
//                ss.txtEmail1.setText(rs.getString(8));
//                       
//                        ss.setVisible(true);
//                        dispose();
//                        con1.close();
//                    
//                    }
//                }
//                
//            
//             else{
//                JOptionPane.showMessageDialog(this, "username or password is incorrect");
//                txtEmail.setText("");
//              txtPassword.setText("");
//                  con1.close();
//                 }
//            
//
//       
//
//        }catch(Exception e){
//            System.out.println(e.getMessage());
//             
//        }finally{
// 
//              if(con1!=null)
//              try {
//                  con1.close();
//              } catch (SQLException ex) {
//                  Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
//              }
//       }
       //////////////////rithvik login end
       // TODO add your handling code here:
           // String emailid= txtEmail.getText();
//        String password=txtPassword.getText();
//        String option=jComboBox1.getSelectedItem().toString();
//        
      String option=comboRole.getSelectedItem().toString();
      String option1=ComboType.getSelectedItem().toString();
     
//        Login lg= new Login();
//         lg.setEmail(emailid);
//         lg.setPassword(password);
//         if(lg.getEmail().equals("")||lg.getPassword().equals("")||option.equals("--Select Role--")){
//         JOptionPane.showMessageDialog(rootPane, "Some Fields are empty", "Error", 1);
//         }else{
//            try{
//            
//            }catch(Exception ex){
//            
//            }
//         }
        
       try{
            
            Class.forName("com.mysql.jdbc.Driver");

            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","root@123");

            
            con1.setNetworkTimeout(Executors.newFixedThreadPool(5), 5000);

            String emailid= txtEmail.getText();
            String password=txtPassword.getText();
            
            Statement stm= con1.createStatement();
            Login lg= new Login();
            lg.setEmail(emailid);
            lg.setPassword(password);
            
            String sql = "select * from personregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' ";
            String sql1 = "select * from systemadmin where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' ";
           // String sql2="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Enterprise Admin'";
            String sqlgriv="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Enterprise Admin' and enterprise='Grievance'";
            String sqlemer="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Enterprise Admin' and enterprise='Emergency'";
            String sqlcovid="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Enterprise Admin' and enterprise='Covid-Help'";
            String sqlres="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Enterprise Admin' and enterprise='Residence'";
            
            String sqlwat="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Manager' and organization='Water Supply Org'";
             String sqlstreet="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Manager' and organization='Street Org'"; 
              String sqlpolice="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Manager' and organization='Police Org'";
              String sqlhospital="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Manager' and organization='Hospital Org'";
              String sqlfire="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Manager' and organization='Fire Org'";
              String sqlnongov="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Manager' and organization='Non Gov Org'";
              String sqlgov="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Manager' and organization='Gov Org'";
              String sqlstandalone="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Manager' and organization='Stand Alone'";
            //String sql3="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Manager'";
            //String sql4="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Worker'";
            
            String sqlwatwor="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Worker' and organization='Water Supply Org'";
             String sqlstreetwor="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Worker' and organization='Street Org'"; 
              String sqlpolicewor="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Worker' and organization='Police Org'";
              String sqlhospitalwor="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Worker' and organization='Hospital Org'";
              String sqlfirewor="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Worker' and organization='Fire Org'";
              String sqlnongovwor="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Worker' and organization='Non Gov Org'";
              String sqlgovwor="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Worker' and organization='Gov Org'";
              String sqlstandalonewor="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Worker' and organization='Stand Alone'";
            
            String sql5="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Community Admin'";
            String sql6="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='Security Staff'";
            String sql7="select * from employeeregistration where email='"+lg.getEmail()+"' and password='"+lg.getPassword()+"' and role='FeedBack Monitor'";
           
          
            if(option.equalsIgnoreCase("Resident") && option1.equalsIgnoreCase("-none-")){
                
               // String s1= rs.getString("option");
                rs=stm.executeQuery(sql);
                if(rs.next()){
                ResidentComplaintJFrame rc = new ResidentComplaintJFrame();
               // RaiseComplaint rac = new RaiseComplaint();
               // String resId = rc.getDetails(rs.getString(1));
               
                rc.txtID2.setText(rs.getString(1));
                rc.txtID1.setText(rs.getString(1));
                rc.txtID3.setText(rs.getString(1));
                                rc.txtName.setText(rs.getString(2));
                rc.txtAge.setText(rs.getString(3));
               switch(rs.getString(4)){
                case "male" -> rc.genderGroup.setSelected(rc.btnMale.getModel(), true);
                case "female" -> rc.genderGroup.setSelected(rc.btnFemale.getModel(), true);
                case "other" -> rc.genderGroup.setSelected(rc.btnOther.getModel(), true);
                }
                
                rc.txtAddress.setText(rs.getString(5));
                rc.comboCity1.setSelectedIndex(0);
                switch(rs.getString(7)){
                    case "Huntington Ave" -> rc.comboCommunity1.setSelectedIndex(0);
                  case "Roxbury" -> rc.comboCommunity1.setSelectedIndex(1);
                    case "South Bay" -> rc.comboCommunity1.setSelectedIndex(2);
                }
                rc.txtPhoneNumber.setText(rs.getString(8));
               rc.txtEmail.setText(rs.getString(9));
                rc.txtPassword.setText(rs.getString(10));
                rc.txtConfirmPassword.setText(rs.getString(11));
                
                rc.setVisible(true);
                dispose();
                con1.close();
                }
            }
                else if(option.equalsIgnoreCase("System-Admin") && option1.equalsIgnoreCase("-none-")){
                
                    rs=stm.executeQuery(sql1);
                    if(rs.next())
                    {
                        SystemAdminJFrame sa= new SystemAdminJFrame();
                        sa.setVisible(true);
                        dispose();
                        con1.close();
                    
                    }
                }
                
                else if(option.equalsIgnoreCase("Enterprise Admin") && option1.equalsIgnoreCase("Grievance")){
                
                    rs=stm.executeQuery(sqlgriv);
                    if(rs.next())
                    {
                EnterpriseJFrame e= new EnterpriseJFrame();
                        
                e.txtID7.setText(rs.getString(1));
                e.txtID3.setText(rs.getString(1));
                e.txtName1.setText(rs.getString(5));
                e.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> e.genderGroup.setSelected(e.btnMale1.getModel(), true);
                case "Female" -> e.genderGroup.setSelected(e.btnFemale1.getModel(), true);
                case "Other" -> e.genderGroup.setSelected(e.btnOther1.getModel(), true);
                }
                e.txtEmail1.setText(rs.getString(8));
                        
                        
                        e.setVisible(true);
                        e.table_update_griv();
                        dispose();
                        con1.close();
                    
                    }
                }
                
                else if(option.equalsIgnoreCase("Enterprise Admin") && option1.equalsIgnoreCase("Covid-Help")){
                
                    rs=stm.executeQuery(sqlcovid);
                    if(rs.next())
                    {
                        EnterpriseJFrame e= new EnterpriseJFrame();
                        
                e.txtID7.setText(rs.getString(1));
                e.txtID3.setText(rs.getString(1));
                e.txtName1.setText(rs.getString(5));
                e.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> e.genderGroup.setSelected(e.btnMale1.getModel(), true);
                case "Female" -> e.genderGroup.setSelected(e.btnFemale1.getModel(), true);
                case "Other" -> e.genderGroup.setSelected(e.btnOther1.getModel(), true);
                }
                e.txtEmail1.setText(rs.getString(8));
                
                        e.setVisible(true);
                        e.table_update_covidhelp();
                        dispose();
                        con1.close();
                    
                    }
                }
                
                else if(option.equalsIgnoreCase("Enterprise Admin") && option1.equalsIgnoreCase("Emergency")){
                
                    rs=stm.executeQuery(sqlemer);
                    if(rs.next())
                    {
                        EnterpriseJFrame e= new EnterpriseJFrame();
                        
                e.txtID7.setText(rs.getString(1));
                e.txtID3.setText(rs.getString(1));
                e.txtName1.setText(rs.getString(5));
                e.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> e.genderGroup.setSelected(e.btnMale1.getModel(), true);
                case "Female" -> e.genderGroup.setSelected(e.btnFemale1.getModel(), true);
                case "Other" -> e.genderGroup.setSelected(e.btnOther1.getModel(), true);
                }
                e.txtEmail1.setText(rs.getString(8));
                
                        e.setVisible(true);
                        e.table_update_emergency();
                        dispose();
                        con1.close();
                    
                    }
                }
                
                else if(option.equalsIgnoreCase("Enterprise Admin") && option1.equalsIgnoreCase("Residence")){
                
                    rs=stm.executeQuery(sqlres);
                    if(rs.next())
                    {
                EnterpriseJFrame e= new EnterpriseJFrame();
                        
                e.txtID7.setText(rs.getString(1));
                e.txtID3.setText(rs.getString(1));
                e.txtName1.setText(rs.getString(5));
                e.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> e.genderGroup.setSelected(e.btnMale1.getModel(), true);
                case "Female" -> e.genderGroup.setSelected(e.btnFemale1.getModel(), true);
                case "Other" -> e.genderGroup.setSelected(e.btnOther1.getModel(), true);
                }
                e.txtEmail1.setText(rs.getString(8));
                
                        e.setVisible(true);
                        dispose();
                        con1.close();
                    
                    }
                }
                
                else if(option.equalsIgnoreCase("Manager")&& option1.equalsIgnoreCase("Water Supply Org")){
                
                    rs=stm.executeQuery(sqlwat);
                    if(rs.next())
                    {
                       ManagerJFrame m=new ManagerJFrame();
                m.txtID8.setText(rs.getString(1));
                m.txtID3.setText(rs.getString(1));
                m.txtName1.setText(rs.getString(5));
                m.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> m.genderGroup.setSelected(m.btnMale1.getModel(), true);
                case "Female" -> m.genderGroup.setSelected(m.btnFemale1.getModel(), true);
                case "Other" -> m.genderGroup.setSelected(m.btnOther1.getModel(), true);
                }
               
                m.txtEmail1.setText(rs.getString(8));

                        m.setVisible(true);
                        m.table_update_water();
                        dispose();
                        con1.close();
                    
                    }
                }
                
                 else if(option.equalsIgnoreCase("Manager")&& option1.equalsIgnoreCase("Street Org")){
                
                    rs=stm.executeQuery(sqlstreet);
                    if(rs.next())
                    {
                       ManagerJFrame m=new ManagerJFrame();
                m.txtID8.setText(rs.getString(1));
                m.txtID3.setText(rs.getString(1));
                m.txtName1.setText(rs.getString(5));
                m.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> m.genderGroup.setSelected(m.btnMale1.getModel(), true);
                case "Female" -> m.genderGroup.setSelected(m.btnFemale1.getModel(), true);
                case "Other" -> m.genderGroup.setSelected(m.btnOther1.getModel(), true);
                }
               
                m.txtEmail1.setText(rs.getString(8));
                       
                        m.setVisible(true);
                        m.table_update_street();
                        dispose();
                        con1.close();
                    
                    }
                }
                 
                  else if(option.equalsIgnoreCase("Manager")&& option1.equalsIgnoreCase("Police Org")){
                
                    rs=stm.executeQuery(sqlpolice);
                    if(rs.next())
                    {
                       ManagerJFrame m=new ManagerJFrame();
                m.txtID8.setText(rs.getString(1));
                m.txtID3.setText(rs.getString(1));
                m.txtName1.setText(rs.getString(5));
                m.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> m.genderGroup.setSelected(m.btnMale1.getModel(), true);
                case "Female" -> m.genderGroup.setSelected(m.btnFemale1.getModel(), true);
                case "Other" -> m.genderGroup.setSelected(m.btnOther1.getModel(), true);
                }
               
                m.txtEmail1.setText(rs.getString(8));

                        m.setVisible(true);
                        m.table_update_police();
                        dispose();
                        con1.close();
                    
                    }
                }
                  
                   else if(option.equalsIgnoreCase("Manager")&& option1.equalsIgnoreCase("Hospital Org")){
                
                    rs=stm.executeQuery(sqlhospital);
                    if(rs.next())
                    {
                       ManagerJFrame m=new ManagerJFrame();
                m.txtID8.setText(rs.getString(1));
                m.txtID3.setText(rs.getString(1));
                m.txtName1.setText(rs.getString(5));
                m.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> m.genderGroup.setSelected(m.btnMale1.getModel(), true);
                case "Female" -> m.genderGroup.setSelected(m.btnFemale1.getModel(), true);
                case "Other" -> m.genderGroup.setSelected(m.btnOther1.getModel(), true);
                }
               
                m.txtEmail1.setText(rs.getString(8));

                       
                        m.setVisible(true);
                        m.table_update_hospital();
                        dispose();
                        con1.close();
                    
                    }
                }
                   
                    else if(option.equalsIgnoreCase("Manager")&& option1.equalsIgnoreCase("Fire Org")){
                
                    rs=stm.executeQuery(sqlfire);
                    if(rs.next())
                    {
                       ManagerJFrame m=new ManagerJFrame();
                m.txtID8.setText(rs.getString(1));
                m.txtID3.setText(rs.getString(1));
                m.txtName1.setText(rs.getString(5));
                m.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> m.genderGroup.setSelected(m.btnMale1.getModel(), true);
                case "Female" -> m.genderGroup.setSelected(m.btnFemale1.getModel(), true);
                case "Other" -> m.genderGroup.setSelected(m.btnOther1.getModel(), true);
                }
               
                m.txtEmail1.setText(rs.getString(8));

                        m.setVisible(true);
                        m.table_update_fire();
                        dispose();
                        con1.close();
                    
                    }
                }
                    else if(option.equalsIgnoreCase("Manager")&& option1.equalsIgnoreCase("Non gov Org")){
                
                    rs=stm.executeQuery(sqlnongov);
                    if(rs.next())
                    {
                       ManagerJFrame m=new ManagerJFrame();
                m.txtID8.setText(rs.getString(1));
                m.txtID3.setText(rs.getString(1));
                m.txtName1.setText(rs.getString(5));
                m.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> m.genderGroup.setSelected(m.btnMale1.getModel(), true);
                case "Female" -> m.genderGroup.setSelected(m.btnFemale1.getModel(), true);
                case "Other" -> m.genderGroup.setSelected(m.btnOther1.getModel(), true);
                }
               
                m.txtEmail1.setText(rs.getString(8));

                        m.setVisible(true);
                        m.table_update_nongov();
                        dispose();
                        con1.close();
                    
                    }
                }
                    
                     else if(option.equalsIgnoreCase("Manager")&& option1.equalsIgnoreCase("Gov Org")){
                
                    rs=stm.executeQuery(sqlgov);
                    if(rs.next())
                    {
                       ManagerJFrame m=new ManagerJFrame();
                m.txtID8.setText(rs.getString(1));
                m.txtID3.setText(rs.getString(1));
                m.txtName1.setText(rs.getString(5));
                m.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> m.genderGroup.setSelected(m.btnMale1.getModel(), true);
                case "Female" -> m.genderGroup.setSelected(m.btnFemale1.getModel(), true);
                case "Other" -> m.genderGroup.setSelected(m.btnOther1.getModel(), true);
                }
               
                m.txtEmail1.setText(rs.getString(8));

                        m.setVisible(true);
                        m.table_update_gov();
                        dispose();
                        con1.close();
                    
                    }
                }
                     
                        else if(option.equalsIgnoreCase("Manager")&& option1.equalsIgnoreCase("Stand Alone")){
                
                    rs=stm.executeQuery(sqlstandalone);
                    if(rs.next())
                    {
                       ManagerJFrame m=new ManagerJFrame();
                m.txtID8.setText(rs.getString(1));
                m.txtID3.setText(rs.getString(1));
                m.txtName1.setText(rs.getString(5));
                m.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> m.genderGroup.setSelected(m.btnMale1.getModel(), true);
                case "Female" -> m.genderGroup.setSelected(m.btnFemale1.getModel(), true);
                case "Other" -> m.genderGroup.setSelected(m.btnOther1.getModel(), true);
                }
               
                m.txtEmail1.setText(rs.getString(8));

                        m.setVisible(true);
                        m.table_update_standalone();
                        dispose();
                        con1.close();
                    
                    }
                }
                
                
                
                 
                 
                 
                 
                 
                 
                 
                 else if(option.equalsIgnoreCase("Staff")&& option1.equalsIgnoreCase("Water Supply Org")){
                
                    rs=stm.executeQuery(sqlwatwor);
                    if(rs.next())
                    {
                      StaffJFrame s=new StaffJFrame();
                  s.txtID6.setText(rs.getString(1));
                s.txtID3.setText(rs.getString(1));
                s.txtName1.setText(rs.getString(5));
                s.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> s.genderGroup.setSelected(s.btnMale1.getModel(), true);
                case "Female" -> s.genderGroup.setSelected(s.btnFemale1.getModel(), true);
                case "Other" -> s.genderGroup.setSelected(s.btnOther1.getModel(), true);
                }
               
                s.txtEmail1.setText(rs.getString(8));
                        s.setVisible(true);
                        
                        
                        s.table_update_water();
                        dispose();
                        con1.close();
                    
                    }
                }
                
                 else if(option.equalsIgnoreCase("Staff")&& option1.equalsIgnoreCase("Street Org")){
                
                    rs=stm.executeQuery(sqlstreetwor);
                    if(rs.next())
                    {
                       StaffJFrame s=new StaffJFrame();
                       s.txtID6.setText(rs.getString(1));
                s.txtID3.setText(rs.getString(1));
                s.txtName1.setText(rs.getString(5));
                s.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> s.genderGroup.setSelected(s.btnMale1.getModel(), true);
                case "Female" -> s.genderGroup.setSelected(s.btnFemale1.getModel(), true);
                case "Other" -> s.genderGroup.setSelected(s.btnOther1.getModel(), true);
                }
               
                s.txtEmail1.setText(rs.getString(8));
                        s.setVisible(true);
                        
                        
                        s.table_update_street();
                        dispose();
                        con1.close();
                    
                    }
                }
                 
                  else if(option.equalsIgnoreCase("Staff")&& option1.equalsIgnoreCase("Police Org")){
                
                    rs=stm.executeQuery(sqlpolicewor);
                    if(rs.next())
                    {
                       StaffJFrame s=new StaffJFrame();
                       s.txtID6.setText(rs.getString(1));
                s.txtID3.setText(rs.getString(1));
                s.txtName1.setText(rs.getString(5));
                s.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> s.genderGroup.setSelected(s.btnMale1.getModel(), true);
                case "Female" -> s.genderGroup.setSelected(s.btnFemale1.getModel(), true);
                case "Other" -> s.genderGroup.setSelected(s.btnOther1.getModel(), true);
                }
               
                s.txtEmail1.setText(rs.getString(8));
                        s.setVisible(true);
                        
                        
                        s.table_update_police();
                        dispose();
                        con1.close();
                    
                    }
                }
                  
                   else if(option.equalsIgnoreCase("Staff")&& option1.equalsIgnoreCase("Hospital Org")){
                
                    rs=stm.executeQuery(sqlhospitalwor);
                    if(rs.next())
                    {
                       StaffJFrame s=new StaffJFrame();
                       s.txtID6.setText(rs.getString(1));
                s.txtID3.setText(rs.getString(1));
                s.txtName1.setText(rs.getString(5));
                s.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> s.genderGroup.setSelected(s.btnMale1.getModel(), true);
                case "Female" -> s.genderGroup.setSelected(s.btnFemale1.getModel(), true);
                case "Other" -> s.genderGroup.setSelected(s.btnOther1.getModel(), true);
                }
               
                s.txtEmail1.setText(rs.getString(8));
                        s.setVisible(true);
                        
                        s.table_update_hospital();
                        
                        dispose();
                        con1.close();
                    
                    }
                }
                   
                    else if(option.equalsIgnoreCase("Staff")&& option1.equalsIgnoreCase("Fire Org")){
                
                    rs=stm.executeQuery(sqlfirewor);
                    if(rs.next())
                    {
                       StaffJFrame s=new StaffJFrame();
                       s.txtID6.setText(rs.getString(1));
                s.txtID3.setText(rs.getString(1));
                s.txtName1.setText(rs.getString(5));
                s.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> s.genderGroup.setSelected(s.btnMale1.getModel(), true);
                case "Female" -> s.genderGroup.setSelected(s.btnFemale1.getModel(), true);
                case "Other" -> s.genderGroup.setSelected(s.btnOther1.getModel(), true);
                }
               
                s.txtEmail1.setText(rs.getString(8));
                        s.setVisible(true);
                        
                        s.table_update_fire();
                        
                        dispose();
                        con1.close();
                    
                    }
                }
                    else if(option.equalsIgnoreCase("Staff")&& option1.equalsIgnoreCase("Non gov Org")){
                
                    rs=stm.executeQuery(sqlnongovwor);
                    if(rs.next())
                    {
                       StaffJFrame s=new StaffJFrame();
                       s.txtID6.setText(rs.getString(1));
                s.txtID3.setText(rs.getString(1));
                s.txtName1.setText(rs.getString(5));
                s.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> s.genderGroup.setSelected(s.btnMale1.getModel(), true);
                case "Female" -> s.genderGroup.setSelected(s.btnFemale1.getModel(), true);
                case "Other" -> s.genderGroup.setSelected(s.btnOther1.getModel(), true);
                }
               
                s.txtEmail1.setText(rs.getString(8));
                        s.setVisible(true);
                        
                        s.table_update_nongov();
                        
                        dispose();
                        con1.close();
                    
                    }
                }
                    
                     else if(option.equalsIgnoreCase("Staff")&& option1.equalsIgnoreCase("Gov Org")){
                
                    rs=stm.executeQuery(sqlgovwor);
                    if(rs.next())
                    {
                       StaffJFrame s=new StaffJFrame();
                       s.txtID6.setText(rs.getString(1));
                s.txtID3.setText(rs.getString(1));
                s.txtName1.setText(rs.getString(5));
                s.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> s.genderGroup.setSelected(s.btnMale1.getModel(), true);
                case "Female" -> s.genderGroup.setSelected(s.btnFemale1.getModel(), true);
                case "Other" -> s.genderGroup.setSelected(s.btnOther1.getModel(), true);
                }
               
                s.txtEmail1.setText(rs.getString(8));
                        s.setVisible(true);
                        
                        s.table_update_gov();
                        
                        dispose();
                        con1.close();
                    
                    }
                }
                     
                        else if(option.equalsIgnoreCase("Staff")&& option1.equalsIgnoreCase("Stand Alone")){
                
                    rs=stm.executeQuery(sqlstandalonewor);
                    if(rs.next())
                    {
                       StaffJFrame s=new StaffJFrame();
                       s.txtID6.setText(rs.getString(1));
                s.txtID3.setText(rs.getString(1));
                s.txtName1.setText(rs.getString(5));
                s.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> s.genderGroup.setSelected(s.btnMale1.getModel(), true);
                case "Female" -> s.genderGroup.setSelected(s.btnFemale1.getModel(), true);
                case "Other" -> s.genderGroup.setSelected(s.btnOther1.getModel(), true);
                }
               
                s.txtEmail1.setText(rs.getString(8));
                        s.setVisible(true);
                        
                        s.table_update_standalone();
                        
                        dispose();
                        con1.close();
                    
                    }
                }
                        
                else if(option.equalsIgnoreCase("Community Admin") && option1.equalsIgnoreCase("-none-")){
                
                    rs=stm.executeQuery(sql5);
                    if(rs.next())
                    {
                       CommunityAdminJFrame cs=new CommunityAdminJFrame();
                      
                cs.txtID5.setText(rs.getString(1));
                cs.txtID4.setText(rs.getString(1));
                cs.txtName1.setText(rs.getString(5));
                cs.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> cs.genderGroup.setSelected(cs.btnMale1.getModel(), true);
                case "Female" -> cs.genderGroup.setSelected(cs.btnFemale1.getModel(), true);
                case "Other" -> cs.genderGroup.setSelected(cs.btnOther1.getModel(), true);
                }
               
                cs.txtEmail1.setText(rs.getString(8));
                       
                        cs.setVisible(true);
                        dispose();
                        con1.close();
                    
                    }
                }
                
                 else if(option.equalsIgnoreCase("Security Staff") && option1.equalsIgnoreCase("-none-")){
                
                    rs=stm.executeQuery(sql6);
                    if(rs.next())
                    {
                       SecuritySupportStaffJFrame ss=new SecuritySupportStaffJFrame();
                      
                ss.txtID3.setText(rs.getString(1));
                ss.txtID4.setText(rs.getString(1));
                ss.txtName1.setText(rs.getString(5));
                ss.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> ss.genderGroup.setSelected(ss.btnMale1.getModel(), true);
                case "Female" -> ss.genderGroup.setSelected(ss.btnFemale1.getModel(), true);
                case "Other" -> ss.genderGroup.setSelected(ss.btnOther1.getModel(), true);
                }
                ss.txtEmail1.setText(rs.getString(8));
                       
                        ss.setVisible(true);
                        dispose();
                        con1.close();
                    
                    }
                }   
                 
                 else if(option.equalsIgnoreCase("FeedBack Monitor") && option1.equalsIgnoreCase("-none-")){
                
                    rs=stm.executeQuery(sql7);
                    if(rs.next())
                    {
                       FeedbackMonitorStaffJFrame fm=new FeedbackMonitorStaffJFrame();
                      
                fm.txtID3.setText(rs.getString(1));
                fm.txtID4.setText(rs.getString(1));
                fm.txtName1.setText(rs.getString(5));
                fm.txtAge1.setText(rs.getString(6));
               switch(rs.getString(7)){
                case "Male" -> fm.genderGroup.setSelected(fm.btnMale1.getModel(), true);
                case "Female" -> fm.genderGroup.setSelected(fm.btnFemale1.getModel(), true);
                case "Other" -> fm.genderGroup.setSelected(fm.btnOther1.getModel(), true);
                }
                fm.txtEmail1.setText(rs.getString(8));
                       
                        fm.setVisible(true);
                        dispose();
                        con1.close();
                    
                    }
                }
                 
                
                
            
             else{
                JOptionPane.showMessageDialog(this, "username or password is incorrect");
                txtEmail.setText("");
              txtPassword.setText("");
                  con1.close();
                 }
            

       

        }catch(Exception e){
            System.out.println(e.getMessage());
             
        }finally{
 
              if(con1!=null)
              try {
                  con1.close();
              } catch (SQLException ex) {
                  Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
              }
       }
       
       
    }//GEN-LAST:event_btnLoginActionPerformed

    private void comboRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRoleActionPerformed
        // TODO add your handling code here:
        try{
            if(comboRole.getSelectedItem().equals("System Admin"))
            {
               
               
                ComboType.removeAllItems();
                ComboType.addItem("-none-");
                ComboType.enable();
                
                
            }
             if(comboRole.getSelectedItem().equals("Enterprise Admin"))
            {
                ComboType.removeAllItems();
               
                ComboType.addItem("Grievance");
                ComboType.addItem("Emergency");
                ComboType.addItem("Covid-Help");
                ComboType.addItem("Residence");
                //comboEnterprise.setSelectedItem(null);
                ComboType.enable();
                
                
            }
              if(comboRole.getSelectedItem().equals("Manager"))
            {
                ComboType.removeAllItems();
               
                ComboType.addItem("Water Supply Org");
                ComboType.addItem("Street Org");
                ComboType.addItem("Police Org");
                ComboType.addItem("Hospital Org");
                ComboType.addItem("Fire Org");
                ComboType.addItem("Non gov Org");
                ComboType.addItem("Gov Org");
                ComboType.addItem("Stand Alone");
                //comboEnterprise.setSelectedItem(null);
                ComboType.enable();
                
                
            }
               if(comboRole.getSelectedItem().equals("Staff"))
            {
               
               
                ComboType.removeAllItems();
               
                ComboType.addItem("Water Supply Org");
                ComboType.addItem("Street Org");
                ComboType.addItem("Police Org");
                ComboType.addItem("Hospital Org");
                ComboType.addItem("Fire Org");
                ComboType.addItem("Non gov Org");
                ComboType.addItem("Gov Org");
                ComboType.addItem("Stand Alone");
                //comboEnterprise.setSelectedItem(null);
                ComboType.enable();
                
                
            }
                if(comboRole.getSelectedItem().equals("Resident"))
            {
               
               
                ComboType.removeAllItems();
                ComboType.addItem("-none-");
                ComboType.enable();
                
            }
                if(comboRole.getSelectedItem().equals("Community Admin"))
            {
               
               
                ComboType.removeAllItems();
                ComboType.addItem("-none-");
                ComboType.enable();
                
                
            }
                if(comboRole.getSelectedItem().equals("Security Staff"))
            {
               
               
                ComboType.removeAllItems();
                ComboType.addItem("-none-");
                ComboType.enable();
                
                
            }
            
                
             
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_comboRoleActionPerformed

    
    
    Connection con1;
    PreparedStatement insert;
    ResultSet rs;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboType;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegister;
    private javax.swing.JComboBox<String> comboRole;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
