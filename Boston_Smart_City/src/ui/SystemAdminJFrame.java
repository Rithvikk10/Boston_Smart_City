/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.Resident;

/**
 *
 * @author rithvik
 */
public class SystemAdminJFrame extends javax.swing.JFrame {

    /**
     * Creates new form SystemAdminJFrame
     */
    public SystemAdminJFrame() {
        initComponents();
        updateCombo();
        updateCityCombo();
        table_update();
        table_update_resident();
        table_update_Complaints();
    }
    Connection con1;
    PreparedStatement insert;
    ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        employeeGenderGroup = new javax.swing.ButtonGroup();
        residentGenderGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboEnterprise = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        comboOrganization = new javax.swing.JComboBox<>();
        comboRole = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();
        jLabel28 = new javax.swing.JLabel();
        txtEmployeeAge = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        btnMale1 = new javax.swing.JRadioButton();
        btnFemale1 = new javax.swing.JRadioButton();
        btnOther1 = new javax.swing.JRadioButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblFireEmployee1 = new javax.swing.JTable();
        btnViewEmployee1 = new javax.swing.JButton();
        txtSearchEmployee1 = new javax.swing.JTextField();
        btnSearchEmployee1 = new javax.swing.JButton();
        btnFire1 = new javax.swing.JButton();
        btnUpdateEmployee1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnViewResident = new javax.swing.JButton();
        btnSearchResident = new javax.swing.JButton();
        txtSearchResident = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtResidentID = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtResidentName = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtResidentAge = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtResidentAddress = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtResidentPhoneNumber = new javax.swing.JTextField();
        txtResidentEmail = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        comboCommunity = new javax.swing.JComboBox<>();
        comboCity = new javax.swing.JComboBox<>();
        btnUpdateResident = new javax.swing.JButton();
        btnDeleteResident = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnViewComplaint = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtComplaintNumber = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtComplaintType = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        txtSearchComplaint = new javax.swing.JTextField();
        btnSearchComplaint = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtComplaint = new javax.swing.JTextArea();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtComment = new javax.swing.JTextArea();
        btnUpdateComplaint = new javax.swing.JButton();
        btnDeleteComplaint = new javax.swing.JButton();
        btnMale = new javax.swing.JRadioButton();
        btnFemale = new javax.swing.JRadioButton();
        btnOther = new javax.swing.JRadioButton();
        btnBack2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(93, 145, 145));
        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 670, 150, 50));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Select Enterprise :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 180, 27));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Select Role :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 180, 27));

        comboEnterprise.setBackground(new java.awt.Color(204, 204, 204));
        comboEnterprise.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        comboEnterprise.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General", "Emergency", "Covid Help" }));
        comboEnterprise.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        comboEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEnterpriseActionPerformed(evt);
            }
        });
        jPanel1.add(comboEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 310, 148, -1));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Select Organization :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 350, 180, 27));

        comboOrganization.setBackground(new java.awt.Color(204, 204, 204));
        comboOrganization.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        comboOrganization.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.add(comboOrganization, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 350, 148, -1));

        comboRole.setBackground(new java.awt.Color(204, 204, 204));
        comboRole.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        comboRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select One", "Enterprise Admin", "Manager", "Worker", " ", " " }));
        comboRole.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        comboRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRoleActionPerformed(evt);
            }
        });
        jPanel1.add(comboRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 148, -1));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Name :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 390, 180, 27));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Email :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 310, 180, 27));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Password :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 350, 180, 27));

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Confirm Password :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, 180, 27));

        jButton1.setBackground(new java.awt.Color(93, 145, 145));
        jButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jButton1.setText("Create");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 540, 160, 50));

        txtName.setBackground(new java.awt.Color(204, 204, 204));
        txtName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 390, 148, -1));

        txtEmail.setBackground(new java.awt.Color(204, 204, 204));
        txtEmail.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 310, 148, -1));

        txtPassword.setBackground(new java.awt.Color(204, 204, 204));
        txtPassword.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 350, 148, -1));

        txtConfirmPassword.setBackground(new java.awt.Color(204, 204, 204));
        txtConfirmPassword.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtConfirmPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.add(txtConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 390, 148, -1));

        jLabel28.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Age :");
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 430, 180, 27));

        txtEmployeeAge.setBackground(new java.awt.Color(204, 204, 204));
        txtEmployeeAge.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtEmployeeAge.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txtEmployeeAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmployeeAgeActionPerformed(evt);
            }
        });
        jPanel1.add(txtEmployeeAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 430, 148, -1));

        jLabel29.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Gender :");
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 270, 180, 27));

        employeeGenderGroup.add(btnMale1);
        btnMale1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnMale1.setText("Male");
        jPanel1.add(btnMale1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 270, -1, -1));

        employeeGenderGroup.add(btnFemale1);
        btnFemale1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnFemale1.setText("Female");
        jPanel1.add(btnFemale1, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 270, -1, -1));

        employeeGenderGroup.add(btnOther1);
        btnOther1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnOther1.setText("Other");
        jPanel1.add(btnOther1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 270, -1, -1));

        tblFireEmployee1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        tblFireEmployee1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Name", "Role", "Enterprise", "Organisation", "Age", "Gender", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblFireEmployee1);

        jPanel1.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 840, 120));

        btnViewEmployee1.setBackground(new java.awt.Color(93, 145, 145));
        btnViewEmployee1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnViewEmployee1.setText("View");
        btnViewEmployee1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnViewEmployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEmployee1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnViewEmployee1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 120, 40));

        txtSearchEmployee1.setBackground(new java.awt.Color(204, 204, 204));
        txtSearchEmployee1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtSearchEmployee1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.add(txtSearchEmployee1, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 170, 100, 40));

        btnSearchEmployee1.setBackground(new java.awt.Color(93, 145, 145));
        btnSearchEmployee1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnSearchEmployee1.setText("Search");
        btnSearchEmployee1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnSearchEmployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchEmployee1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearchEmployee1, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 170, 120, 40));

        btnFire1.setBackground(new java.awt.Color(93, 145, 145));
        btnFire1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        btnFire1.setText("Fire");
        btnFire1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnFire1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFire1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnFire1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 540, 160, 50));

        btnUpdateEmployee1.setBackground(new java.awt.Color(93, 145, 145));
        btnUpdateEmployee1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        btnUpdateEmployee1.setText("Update");
        btnUpdateEmployee1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnUpdateEmployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEmployee1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdateEmployee1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 540, 160, 50));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Staff1.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(-130, 30, 1310, 780));

        jTabbedPane1.addTab("Employee", jPanel1);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Resident ID", "Name", "Age", "Gender", "Address", "Community", "City", "Phone Number", "Email"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 870, 110));

        btnViewResident.setBackground(new java.awt.Color(91, 140, 140));
        btnViewResident.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnViewResident.setText("View");
        btnViewResident.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnViewResident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewResidentActionPerformed(evt);
            }
        });
        jPanel3.add(btnViewResident, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 90, -1));

        btnSearchResident.setBackground(new java.awt.Color(91, 140, 140));
        btnSearchResident.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnSearchResident.setText("Search");
        btnSearchResident.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnSearchResident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchResidentActionPerformed(evt);
            }
        });
        jPanel3.add(btnSearchResident, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 160, 90, -1));

        txtSearchResident.setBackground(new java.awt.Color(204, 204, 204));
        txtSearchResident.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtSearchResident.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txtSearchResident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchResidentActionPerformed(evt);
            }
        });
        jPanel3.add(txtSearchResident, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 160, 120, -1));

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Resident ID :");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 120, 30));

        txtResidentID.setBackground(new java.awt.Color(204, 204, 204));
        txtResidentID.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtResidentID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txtResidentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResidentIDActionPerformed(evt);
            }
        });
        jPanel3.add(txtResidentID, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 220, 110, -1));

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Name :");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 120, 30));

        txtResidentName.setBackground(new java.awt.Color(204, 204, 204));
        txtResidentName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtResidentName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(txtResidentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 110, -1));

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Age :");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 120, 30));

        txtResidentAge.setBackground(new java.awt.Color(204, 204, 204));
        txtResidentAge.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtResidentAge.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(txtResidentAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 110, -1));

        jLabel17.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("City :");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 220, 140, 30));

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText(" Gender :");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 220, 120, 30));

        jLabel19.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Address :");
        jPanel3.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 270, 120, 30));

        txtResidentAddress.setBackground(new java.awt.Color(204, 204, 204));
        txtResidentAddress.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtResidentAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(txtResidentAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 270, 110, -1));

        jLabel20.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Community :");
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 310, 120, 30));

        jLabel21.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Phone Number :");
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 260, 140, 30));

        txtResidentPhoneNumber.setBackground(new java.awt.Color(204, 204, 204));
        txtResidentPhoneNumber.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtResidentPhoneNumber.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(txtResidentPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 270, 110, -1));

        txtResidentEmail.setBackground(new java.awt.Color(204, 204, 204));
        txtResidentEmail.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtResidentEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(txtResidentEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 320, 110, -1));

        jLabel22.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("Email :");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 310, 140, 30));

        comboCommunity.setBackground(new java.awt.Color(204, 204, 204));
        comboCommunity.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        comboCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Huntinton Ave", "Roxbury", "South Bay" }));
        comboCommunity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(comboCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 320, 110, -1));

        comboCity.setBackground(new java.awt.Color(204, 204, 204));
        comboCity.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        comboCity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(comboCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 220, 110, -1));

        btnUpdateResident.setBackground(new java.awt.Color(91, 140, 140));
        btnUpdateResident.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnUpdateResident.setText("Update");
        btnUpdateResident.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnUpdateResident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateResidentActionPerformed(evt);
            }
        });
        jPanel3.add(btnUpdateResident, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 220, 140, 50));

        btnDeleteResident.setBackground(new java.awt.Color(91, 140, 140));
        btnDeleteResident.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnDeleteResident.setText("Delete");
        btnDeleteResident.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnDeleteResident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteResidentActionPerformed(evt);
            }
        });
        jPanel3.add(btnDeleteResident, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 290, 140, 50));

        jTable2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Complaint Number", "Complaint Type", "Status", "Complaint", "Time", "Comment by worker"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, 880, 112));

        btnViewComplaint.setBackground(new java.awt.Color(91, 140, 140));
        btnViewComplaint.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnViewComplaint.setText("View");
        btnViewComplaint.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnViewComplaint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewComplaintActionPerformed(evt);
            }
        });
        jPanel3.add(btnViewComplaint, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 530, 80, -1));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Complaint Number :");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 580, 170, -1));

        txtComplaintNumber.setBackground(new java.awt.Color(204, 204, 204));
        txtComplaintNumber.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtComplaintNumber.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txtComplaintNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComplaintNumberActionPerformed(evt);
            }
        });
        jPanel3.add(txtComplaintNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 580, 100, -1));

        jLabel23.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Complaint Type :");
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 620, 170, -1));

        txtComplaintType.setBackground(new java.awt.Color(204, 204, 204));
        txtComplaintType.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtComplaintType.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(txtComplaintType, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 620, 100, -1));

        jLabel24.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Status :");
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 660, 170, -1));

        txtStatus.setBackground(new java.awt.Color(204, 204, 204));
        txtStatus.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(txtStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 660, 100, -1));

        txtSearchComplaint.setBackground(new java.awt.Color(204, 204, 204));
        txtSearchComplaint.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtSearchComplaint.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel3.add(txtSearchComplaint, new org.netbeans.lib.awtextra.AbsoluteConstraints(834, 530, 120, -1));

        btnSearchComplaint.setBackground(new java.awt.Color(91, 140, 140));
        btnSearchComplaint.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnSearchComplaint.setText("Search");
        btnSearchComplaint.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnSearchComplaint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchComplaintActionPerformed(evt);
            }
        });
        jPanel3.add(btnSearchComplaint, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 530, 90, -1));

        jLabel25.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Time :");
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 710, 110, -1));

        txtTime.setBackground(new java.awt.Color(204, 204, 204));
        txtTime.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txtTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeActionPerformed(evt);
            }
        });
        jPanel3.add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 710, 100, -1));

        jLabel26.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("Complaint :");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 580, 180, -1));

        txtComplaint.setBackground(new java.awt.Color(204, 204, 204));
        txtComplaint.setColumns(10);
        txtComplaint.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtComplaint.setRows(2);
        txtComplaint.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jScrollPane4.setViewportView(txtComplaint);

        jPanel3.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 580, 200, 70));

        jLabel27.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Comment by Worker :");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 660, -1, -1));

        txtComment.setBackground(new java.awt.Color(204, 204, 204));
        txtComment.setColumns(10);
        txtComment.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtComment.setRows(2);
        txtComment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jScrollPane5.setViewportView(txtComment);

        jPanel3.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 660, 200, 70));

        btnUpdateComplaint.setBackground(new java.awt.Color(91, 140, 140));
        btnUpdateComplaint.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnUpdateComplaint.setText("Update");
        btnUpdateComplaint.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnUpdateComplaint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateComplaintActionPerformed(evt);
            }
        });
        jPanel3.add(btnUpdateComplaint, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 590, 140, 50));

        btnDeleteComplaint.setBackground(new java.awt.Color(91, 140, 140));
        btnDeleteComplaint.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnDeleteComplaint.setText("Delete");
        btnDeleteComplaint.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnDeleteComplaint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteComplaintActionPerformed(evt);
            }
        });
        jPanel3.add(btnDeleteComplaint, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 660, 140, 50));

        residentGenderGroup.add(btnMale);
        btnMale.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        btnMale.setText("Male");
        jPanel3.add(btnMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, -1, -1));

        residentGenderGroup.add(btnFemale);
        btnFemale.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        btnFemale.setText("Female");
        jPanel3.add(btnFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 220, -1, -1));

        residentGenderGroup.add(btnOther);
        btnOther.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        btnOther.setText("Other");
        jPanel3.add(btnOther, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 220, -1, -1));

        btnBack2.setBackground(new java.awt.Color(91, 140, 140));
        btnBack2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnBack2.setText("Back");
        btnBack2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });
        jPanel3.add(btnBack2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 730, 120, 42));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Staff1.png"))); // NOI18N
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 1310, 810));

        jTabbedPane1.addTab("Resident", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        MainJFrame mf = new MainJFrame();
        mf.setVisible(true);

        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtComplaintNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComplaintNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComplaintNumberActionPerformed

    private void txtTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeActionPerformed

    private void txtEmployeeAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmployeeAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmployeeAgeActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
        MainJFrame mf = new MainJFrame();
        mf.setVisible(true);

        dispose();
    }//GEN-LAST:event_btnBack2ActionPerformed

    
    private void updateCombo() {
         
    String sql="select * from community";
   
    try{
       Class.forName("com.mysql.jdbc.Driver");

        con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");

        con1.setNetworkTimeout(Executors.newFixedThreadPool(5), 5000);

        insert=con1.prepareStatement(sql);
        
        rs=insert.executeQuery();
        while(rs.next()){
        comboCommunity.addItem(rs.getString("communityname"));
        con1.close();
        }
        
    }catch(Exception e){
    }finally{
    if(con1!=null){
        try {
            con1.close();
        } catch (SQLException ex) {
            Logger.getLogger(ResidentProfileJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }
    }
    
    
    private void updateCityCombo(){
         
    String sql="select * from city";
   
    try{
       Class.forName("com.mysql.jdbc.Driver");

        con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");

        con1.setNetworkTimeout(Executors.newFixedThreadPool(5), 5000);

        insert=con1.prepareStatement(sql);
        
        rs=insert.executeQuery();
        while(rs.next()){
        comboCity.addItem(rs.getString("cityname"));

          con1.close();
        

        }
        
    }catch(Exception e){
    }finally{
    if(con1!=null){
        try {
            con1.close();
        } catch (SQLException ex) {
            Logger.getLogger(ResidentProfileJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }
    }
    
    private void table_update(){
        int c;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","root@123");
            insert=con1.prepareStatement("select * from employeeregistration");
            
             ResultSet rs= insert.executeQuery();
             ResultSetMetaData Rss = rs.getMetaData();
             c = Rss.getColumnCount();
             
             DefaultTableModel Df = (DefaultTableModel) tblFireEmployee1.getModel();
            
             Df.setRowCount(0);
             
             while(rs.next())
             {
               Vector v2 = new Vector();
               
               for(int a=1; a<=c; a++)
               {
                 v2.add(rs.getString("employeeid"));
                  v2.add(rs.getString("name"));
                   v2.add(rs.getString("role"));
                    v2.add(rs.getString("enterprise"));
                    v2.add(rs.getString("organization"));
                    v2.add(rs.getString("age"));
                    v2.add(rs.getString("gender"));
                    v2.add(rs.getString("email"));
                 
               
               }
               Df.addRow(v2);
             }
           
             con1.close();
           
        
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }  
        
        
    }
        
        
        private void table_update_resident()
        {
        int c;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");
            insert=con1.prepareStatement("select * from personregistration");
            
             ResultSet rs= insert.executeQuery();
             ResultSetMetaData Rss = rs.getMetaData();
             c = Rss.getColumnCount();
             
             DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            
             Df.setRowCount(0);
             
             while(rs.next())
             {
               Vector v2 = new Vector();
               
               for(int a=1; a<=c; a++)
               {
                 v2.add(rs.getString("id"));
                  v2.add(rs.getString("name"));
                   v2.add(rs.getString("age"));
                    v2.add(rs.getString("gender"));
                    v2.add(rs.getString("address"));
                    v2.add(rs.getString("community"));
                    v2.add(rs.getString("city"));
                    v2.add(rs.getString("phonenumber"));
                    v2.add(rs.getString("email"));
                 
               
               }
               Df.addRow(v2);
             }
           
             con1.close();      
           
        
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }  
        
        
        }
        
        
        
         private void table_update_Complaints()
        {
        int c;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");
            insert=con1.prepareStatement("select * from raisecomplaint");
            
             ResultSet rs= insert.executeQuery();
             ResultSetMetaData Rss = rs.getMetaData();
             c = Rss.getColumnCount();
             
             DefaultTableModel Df = (DefaultTableModel) jTable2.getModel();
            
             Df.setRowCount(0);
             
             while(rs.next())
             {
               Vector v2 = new Vector();
               
               for(int a=1; a<=c; a++)
               {
                 v2.add(rs.getString("complaintid"));
                  v2.add(rs.getString("organization"));
                   v2.add(rs.getString("status"));
                    v2.add(rs.getString("complaint"));
                     v2.add(rs.getString("timestamp"));
                      v2.add(rs.getString("workercomment"));
               }
               Df.addRow(v2);
             }
           
             con1.close();      
           
        
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }  
        
        
        }
        
        
        
        
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         String role=(String)comboRole.getSelectedItem();
    
        String enterprise=(String)comboEnterprise.getSelectedItem();
        String organization=(String)comboOrganization.getSelectedItem();
        
        String name= txtName.getText();
        int age=Integer.parseInt(txtEmployeeAge.getText());

        String email=txtEmail.getText();
        String password=txtPassword.getText();
        String confirmpassword=txtConfirmPassword.getText();
        
        this.btnMale1.setActionCommand("Male");
        this.btnFemale1.setActionCommand("Female");
        this.btnOther1.setActionCommand("Other");
        
        String selection = this.employeeGenderGroup.getSelection().getActionCommand();

        try {
            Class.forName("com.mysql.jdbc.Driver");

            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","root@123");
            

            con1.setNetworkTimeout(Executors.newFixedThreadPool(5), 5000);

            Employee r = new Employee();
           
            r.setName(name);
            r.setAge(age);
            r.setGender(selection);
            r.setEmail(email);
            r.setRole(role);
            r.setEnterprise(enterprise);
            r.setOrganization(organization);
            r.setPassword(password);
            r.setConfirmPassword(confirmpassword);
            
            insert=con1.prepareStatement("insert into employeeregistration(role,enterprise,organization,name,age,gender,email,password,confirmpassword)values(?,?,?,?,?,?,?,?,?)");

            insert.setString(1, r.getRole());
            
            insert.setString(2, r.getEnterprise());
            // insert.setString(2, gender);
//            if(btnMale.isSelected()){
//                insert.setString(3, btnMale.getText());
//            }
//            else if(btnFemale.isSelected()){
//                insert.setString(3, btnFemale.getText());
//            }
//            else{
//                insert.setString(3, btnOther.getText());
//            }
            insert.setString(3, r.getOrganization());

            insert.setString(4, r.getName());

            insert.setInt(5, r.getAge());
            
            insert.setString(6, r.getGender());

            insert.setString(7, r.getEmail());
            
            insert.setString(8, r.getPassword());
            
            insert.setString(9, r.getConfirmPassword());

            insert.executeUpdate();

            JOptionPane.showMessageDialog(this,"Registered Successfully");
            
            table_update();
        

            txtName.setText("");
            txtEmployeeAge.setText("");
            employeeGenderGroup.clearSelection();
           
            comboRole.setSelectedIndex(-1);
            comboEnterprise.setSelectedIndex(-1);
             comboOrganization.setSelectedIndex(-1);
           
            txtEmail.setText("");
            txtPassword.setText("");
            txtConfirmPassword.setText("");

              con1.close();


        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ResidentProfileJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        catch (SQLException ex) {
            Logger.getLogger(ResidentProfileJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
 
              if(con1!=null)
              try {
                  con1.close();
              } catch (SQLException ex) {
                  Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
              }
}
  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnViewResidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewResidentActionPerformed
        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
        int selectedIndex =  jTable1.getSelectedRow();
                 
         
         txtResidentID.setText(Df.getValueAt(selectedIndex,0).toString());
         txtResidentName.setText(Df.getValueAt(selectedIndex,1).toString());
         txtResidentAge.setText(Df.getValueAt(selectedIndex,2).toString());
         
         switch(Df.getValueAt(selectedIndex, 3).toString()){
             case "Male" -> residentGenderGroup.setSelected(btnMale.getModel(), true);
             case "Female" -> residentGenderGroup.setSelected(btnFemale.getModel(), true);
             case "Other" -> residentGenderGroup.setSelected(btnOther.getModel(), true);
         }
         
         txtResidentAddress.setText(Df.getValueAt(selectedIndex,4).toString());
         
         switch(Df.getValueAt(selectedIndex, 5).toString()){
             case "Huntington Ave" -> comboCommunity.setSelectedIndex(0);
             case "Roxbury" -> comboCommunity.setSelectedIndex(1);
             case "South Bay" -> comboCommunity.setSelectedIndex(2);              
         }
         
         comboCity.setSelectedIndex(0);
         
         txtResidentPhoneNumber.setText(Df.getValueAt(selectedIndex,7).toString());
         txtResidentEmail.setText(Df.getValueAt(selectedIndex,8).toString());
                  
         
    }//GEN-LAST:event_btnViewResidentActionPerformed

    private void btnUpdateResidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateResidentActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
          int selectedIndex = jTable1.getSelectedRow();
         
          try { 
        int id=Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString()); 
        
        String resname = txtResidentName.getText();
        int age = Integer.parseInt(txtResidentAge.getText());
        
        this.btnMale.setActionCommand("Male");
        this.btnFemale.setActionCommand("Female");
        this.btnOther.setActionCommand("Other");
         String selection = this.residentGenderGroup.getSelection().getActionCommand();
                
         String addrs = txtResidentAddress.getText();
         String comm = (String)comboCommunity.getSelectedItem();
         String city = (String)comboCommunity.getSelectedItem();
         Long phone = Long.parseLong(txtResidentPhoneNumber.getText());
         String email = txtResidentEmail.getText();       
         
              
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");
            insert=con1.prepareStatement("update personregistration set name=?,age=?,gender=?,address=?,city=?,community=?,phonenumber=?,email=? where id=?");
            
            insert.setString(1, resname);
            insert.setInt(2, age);
            insert.setString(3, selection);
            insert.setString(4, addrs);
            insert.setString(5, city);
            insert.setString(6, comm);
            insert.setLong(7, phone);
            insert.setString(8, email);
            insert.setInt(9, id);
            
             
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Record Updated");
             table_update_resident();
            
          
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }//GEN-LAST:event_btnUpdateResidentActionPerformed

    private void comboRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRoleActionPerformed
        try{
            if(comboRole.getSelectedItem().equals("Enterprise Admin"))
            {
                comboEnterprise.removeAllItems();
               
                comboEnterprise.addItem("Grievance");
                comboEnterprise.addItem("Emergency");
                comboEnterprise.addItem("Covid-Help");
                comboEnterprise.addItem("Residence");
                //comboEnterprise.setSelectedItem(null);
                comboOrganization.disable();
                
                
            }
             if(comboRole.getSelectedItem().equals("Manager"))
            {
                comboEnterprise.removeAllItems();
               
                comboEnterprise.addItem("Grievance");
                comboEnterprise.addItem("Emergency");
                comboEnterprise.addItem("Covid-Help");
                comboEnterprise.addItem("Residence");
                //comboEnterprise.setSelectedItem(null);
                comboOrganization.enable();
                
                
            }
              if(comboRole.getSelectedItem().equals("Worker"))
            {
                comboEnterprise.removeAllItems();
               
                comboEnterprise.addItem("Grievance");
                comboEnterprise.addItem("Emergency");
                comboEnterprise.addItem("Covid-Help");
                comboEnterprise.addItem("Residence");
                //comboEnterprise.setSelectedItem(null);
                comboOrganization.enable();
                
                
            }
            if(comboRole.getSelectedItem().equals("Community Admin"))
            {
                comboEnterprise.disable();
               
                comboOrganization.disable();
                
                
            }
            if(comboRole.getSelectedItem().equals("Security Staff"))
            {
                comboEnterprise.disable();
               
                comboOrganization.disable();
                
                
            }
            if(comboRole.getSelectedItem().equals("FeedBack Monitor"))
            {
                comboEnterprise.disable();
               
                comboOrganization.disable();
                
                
            }
                
             
        }
        catch(Exception e)
        {
            System.out.println(e);
        }

    }//GEN-LAST:event_comboRoleActionPerformed

    private void comboEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEnterpriseActionPerformed
           try{
            if(comboEnterprise.getSelectedItem().equals("Grievance"))
            {
                comboOrganization.removeAllItems();
                comboOrganization.addItem("Water Supply Org");
                comboOrganization.addItem("Street Org");
                comboOrganization.addItem("Police Org");
                comboOrganization.setSelectedItem(null);

            }
            else if(comboEnterprise.getSelectedItem().equals("Emergency"))
            {
                comboOrganization.removeAllItems();
                comboOrganization.addItem("Hospital Org");
                comboOrganization.addItem("Fire Org");
                comboOrganization.setSelectedItem(null);
            }
            else if(comboEnterprise.getSelectedItem().equals("Covid-Help"))
            {
                comboOrganization.removeAllItems();
                comboOrganization.addItem("Non Gov Org");
                comboOrganization.addItem("Gov Org");
                comboOrganization.setSelectedItem(null);

            }
            else if(comboEnterprise.getSelectedItem().equals("Residence"))
            {
                comboOrganization.removeAllItems();
                comboOrganization.addItem("Stand Alone");
                comboOrganization.setSelectedItem(null);

            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_comboEnterpriseActionPerformed

    private void btnUpdateEmployee1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateEmployee1ActionPerformed
          DefaultTableModel Df = (DefaultTableModel) tblFireEmployee1.getModel();
          int selectedIndex = tblFireEmployee1.getSelectedRow();
         
          try {    
          int id=Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString()); 
        String role=(String)comboRole.getSelectedItem();
    
        String enterprise=(String)comboEnterprise.getSelectedItem();
        String organization=(String)comboOrganization.getSelectedItem();
        
        String name= txtName.getText();
        int age=Integer.parseInt(txtEmployeeAge.getText());

        String email=txtEmail.getText();
        String password=txtPassword.getText();
        String confirmpassword=txtConfirmPassword.getText();
        
        this.btnMale1.setActionCommand("Male");
        this.btnFemale1.setActionCommand("Female");
        this.btnOther1.setActionCommand("Other");
         String selection = this.employeeGenderGroup.getSelection().getActionCommand();
              
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","root@123");
            insert=con1.prepareStatement("update employeeregistration set role=?,enterprise=?,organization=?,name=?,age=?,gender=?,email=?,password=?,confirmpassword=? where employeeid=?");
            
            insert.setString(1, role);
            insert.setString(2, enterprise);
            insert.setString(3, organization);
            insert.setString(4, name);
            insert.setInt(5, age);
            insert.setString(6, selection);
            insert.setString(7, email);
            insert.setString(8, password);
            insert.setString(9, confirmpassword);
            
            insert.setInt(10, id);
            
             
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Record Updated");
             table_update();
            
          
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }  
         
                 
    }//GEN-LAST:event_btnUpdateEmployee1ActionPerformed

    private void btnFire1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFire1ActionPerformed
           
           DefaultTableModel Df = (DefaultTableModel) tblFireEmployee1.getModel();
         int selectedIndex = tblFireEmployee1.getSelectedRow();
          try {
              
              
              int id=Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());
              
              int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the record","Warning",JOptionPane.YES_NO_OPTION);
              if(dialogResult==JOptionPane.YES_OPTION)
              {
                  Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","root@123");
            insert=con1.prepareStatement("delete from employeeregistration where employeeid=?");
            
             insert.setInt(1, id);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Record Delete");
            
              table_update();
             
            
              }
          
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ResidentComplaintJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(ResidentComplaintJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_btnFire1ActionPerformed

    private void btnViewEmployee1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEmployee1ActionPerformed
        DefaultTableModel Df = (DefaultTableModel) tblFireEmployee1.getModel();
         int selectedIndex =  tblFireEmployee1.getSelectedRow();
         
         
         txtName.setText(Df.getValueAt(selectedIndex,1).toString());
         
         switch(Df.getValueAt(selectedIndex, 2).toString()){
             case "Enterprise Admin" -> comboRole.setSelectedIndex(1);
             case "Manager" -> comboRole.setSelectedIndex(2);
             case "Worker" -> comboRole.setSelectedIndex(3);              
         }
         
         switch(Df.getValueAt(selectedIndex, 3).toString()){
             case "Grievance" -> comboEnterprise.setSelectedIndex(0);
             case "Emergency" -> comboEnterprise.setSelectedIndex(1);
             case "Covid-Help" -> comboEnterprise.setSelectedIndex(2);
             case "Residence" -> comboEnterprise.setSelectedIndex(3);
         }
         
         if(Df.getValueAt(selectedIndex, 4) == null){
             comboOrganization.setSelectedIndex(-1);
         }else{
         switch(Df.getValueAt(selectedIndex, 4).toString()){
             case "Water Supply Org" -> comboOrganization.setSelectedIndex(0);
             case "Street Org" -> comboOrganization.setSelectedIndex(1);
             case "Police Org" -> comboOrganization.setSelectedIndex(2);
             case "Hospital Org" -> comboOrganization.setSelectedIndex(0);
             case "Fire Org" -> comboOrganization.setSelectedIndex(1);
             case "Non Gov Org" -> comboOrganization.setSelectedIndex(0);
             case "Gov Org" -> comboOrganization.setSelectedIndex(1);
             case "Stand Alone" -> comboOrganization.setSelectedIndex(0);
         }
         }
        
         txtEmployeeAge.setText(Df.getValueAt(selectedIndex, 5).toString());
         
         switch(Df.getValueAt(selectedIndex, 6).toString()){
             case "Male" -> employeeGenderGroup.setSelected(btnMale1.getModel(), true);
             case "Female" -> employeeGenderGroup.setSelected(btnFemale1.getModel(), true);
             case "Other" -> employeeGenderGroup.setSelected(btnOther1.getModel(), true);
         }
         
         txtEmail.setText(Df.getValueAt(selectedIndex, 7).toString());
                 
         
          
    }//GEN-LAST:event_btnViewEmployee1ActionPerformed

    private void btnSearchEmployee1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchEmployee1ActionPerformed
            int c;
        try {
            int empId = Integer.parseInt(txtSearchEmployee1.getText());
            
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");
            insert=con1.prepareStatement("select * from employeeregistration where employeeId = '"+empId+"'");
            
             ResultSet rs= insert.executeQuery();
             ResultSetMetaData Rss = rs.getMetaData();
             c = Rss.getColumnCount();
             
             DefaultTableModel Df = (DefaultTableModel) tblFireEmployee1.getModel();
            
             Df.setRowCount(0);
             
             while(rs.next())
             {
               Vector v2 = new Vector();
               
               for(int a=1; a<=c; a++)
               {
                 v2.add(rs.getString("employeeid"));
                  v2.add(rs.getString("name"));
                   v2.add(rs.getString("role"));
                    v2.add(rs.getString("enterprise"));
                    v2.add(rs.getString("organization"));
                    v2.add(rs.getString("age"));
                    v2.add(rs.getString("gender"));
                    v2.add(rs.getString("email"));
                 
               
               }
               Df.addRow(v2);
             }

        } catch (SQLException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSearchEmployee1ActionPerformed

    private void txtResidentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResidentIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResidentIDActionPerformed

    private void btnDeleteResidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteResidentActionPerformed
          DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
          int selectedIndex = jTable1.getSelectedRow();
          
          try {  
              int id=Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());
              
              int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the record","Warning",JOptionPane.YES_NO_OPTION);
              if(dialogResult==JOptionPane.YES_OPTION)
              {
                  Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");
            insert=con1.prepareStatement("delete from personregistration where id=?");
            
             insert.setInt(1, id);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Record Deleted");
            
              table_update_resident();
             
            
              }
          
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ResidentComplaintJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(ResidentComplaintJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_btnDeleteResidentActionPerformed

    private void btnSearchResidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchResidentActionPerformed
        int c;
        try {
            int resId = Integer.parseInt(txtSearchResident.getText());
            
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");
            insert=con1.prepareStatement("select * from personregistration where Id = '"+resId+"'");
            
             ResultSet rs= insert.executeQuery();
             ResultSetMetaData Rss = rs.getMetaData();
             c = Rss.getColumnCount();
             
             DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
            
             Df.setRowCount(0);
             
             while(rs.next())
             {
               Vector v2 = new Vector();
               
               for(int a=1; a<=c; a++)
               {
                 v2.add(rs.getString("id"));
                  v2.add(rs.getString("name"));
                   v2.add(rs.getString("age"));
                    v2.add(rs.getString("gender"));
                    v2.add(rs.getString("address"));
                    v2.add(rs.getString("community"));
                    v2.add(rs.getString("city"));
                    v2.add(rs.getString("phonenumber"));
                    v2.add(rs.getString("email"));
                 
               
               }
               Df.addRow(v2);
             }

        } catch (SQLException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchResidentActionPerformed

    private void txtSearchResidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchResidentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchResidentActionPerformed

    private void btnViewComplaintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewComplaintActionPerformed
        DefaultTableModel Df = (DefaultTableModel) jTable2.getModel();
        int selectedIndex =  jTable2.getSelectedRow();
                 

         txtComplaintNumber.setText(Df.getValueAt(selectedIndex,0).toString());
         txtComplaintType.setText(Df.getValueAt(selectedIndex,1).toString());
         txtStatus.setText(Df.getValueAt(selectedIndex,2).toString());
         txtTime.setText(Df.getValueAt(selectedIndex,3).toString());
         txtComplaint.setText(Df.getValueAt(selectedIndex,4).toString());
         txtComment.setText(Df.getValueAt(selectedIndex,5).toString());
         
         
    }//GEN-LAST:event_btnViewComplaintActionPerformed

    private void btnUpdateComplaintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateComplaintActionPerformed
        DefaultTableModel Df = (DefaultTableModel) jTable2.getModel();
          int selectedIndex = jTable2.getSelectedRow();
         
          try { 
       
              int cid = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString()); 
        
              String comtype = txtComplaintType.getText();
              String status = txtStatus.getText();
              
              String time = txtTime.getText();
  
              String complaint = txtComplaint.getText();
              String comment = txtComment.getText();
              
              
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");
            insert=con1.prepareStatement("update raisecomplaint set organization=?,status=?,timestamp=?,complaint=?,workercomment=? where cid=?");
            
            insert.setString(3, comtype);
            insert.setString(6, status);
            insert.setString(5, time);
            insert.setString(4, complaint);
            insert.setString(7, comment);
            insert.setInt(8, cid);
            
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Record Updated");
             table_update_Complaints();
            
          
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }//GEN-LAST:event_btnUpdateComplaintActionPerformed

    private void btnDeleteComplaintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteComplaintActionPerformed
        DefaultTableModel Df = (DefaultTableModel) jTable2.getModel();
          int selectedIndex = jTable2.getSelectedRow();
          
          try {  
              int id=Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());
              
              int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the record","Warning",JOptionPane.YES_NO_OPTION);
              if(dialogResult==JOptionPane.YES_OPTION)
              {
                  Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");
            insert=con1.prepareStatement("delete from raisecomplaint where complaintid=?");
            
             insert.setInt(1, id);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Record Deleted");
            
              table_update_Complaints();
             
            
              }
          
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ResidentComplaintJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(ResidentComplaintJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_btnDeleteComplaintActionPerformed

    private void btnSearchComplaintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchComplaintActionPerformed
       
        
        int c;
        try {
            int comId = Integer.parseInt(txtSearchComplaint.getText());
            
            Class.forName("com.mysql.jdbc.Driver");
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/bostonsmartcity","root","Anwesh@root1");
            insert=con1.prepareStatement("select * from raisecomplaint where complaintid = '"+comId+"'");
            
             ResultSet rs= insert.executeQuery();
             ResultSetMetaData Rss = rs.getMetaData();
             c = Rss.getColumnCount();
             
             DefaultTableModel Df = (DefaultTableModel) jTable2.getModel();
            
             Df.setRowCount(0);
             
             while(rs.next())
             {
               Vector v2 = new Vector();
               
               for(int a=1; a<=c; a++)
               {
                 v2.add(rs.getString("complaintid"));
                  v2.add(rs.getString("organization"));
                   v2.add(rs.getString("status"));
                    v2.add(rs.getString("complaint"));
                    v2.add(rs.getString("timestamp"));
                    v2.add(rs.getString("workercomment")); 
               }
               Df.addRow(v2);
             }

        } catch (SQLException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SystemAdminJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchComplaintActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SystemAdminJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SystemAdminJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SystemAdminJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SystemAdminJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SystemAdminJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnDeleteComplaint;
    private javax.swing.JButton btnDeleteResident;
    private javax.swing.JRadioButton btnFemale;
    private javax.swing.JRadioButton btnFemale1;
    private javax.swing.JButton btnFire1;
    private javax.swing.JRadioButton btnMale;
    private javax.swing.JRadioButton btnMale1;
    private javax.swing.JRadioButton btnOther;
    private javax.swing.JRadioButton btnOther1;
    private javax.swing.JButton btnSearchComplaint;
    private javax.swing.JButton btnSearchEmployee1;
    private javax.swing.JButton btnSearchResident;
    private javax.swing.JButton btnUpdateComplaint;
    private javax.swing.JButton btnUpdateEmployee1;
    private javax.swing.JButton btnUpdateResident;
    private javax.swing.JButton btnViewComplaint;
    private javax.swing.JButton btnViewEmployee1;
    private javax.swing.JButton btnViewResident;
    private javax.swing.JComboBox<String> comboCity;
    private javax.swing.JComboBox<String> comboCommunity;
    private javax.swing.JComboBox<String> comboEnterprise;
    private javax.swing.JComboBox<String> comboOrganization;
    private javax.swing.JComboBox<String> comboRole;
    private javax.swing.ButtonGroup employeeGenderGroup;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.ButtonGroup residentGenderGroup;
    private javax.swing.JTable tblFireEmployee1;
    private javax.swing.JTextArea txtComment;
    private javax.swing.JTextArea txtComplaint;
    private javax.swing.JTextField txtComplaintNumber;
    private javax.swing.JTextField txtComplaintType;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmployeeAge;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtResidentAddress;
    private javax.swing.JTextField txtResidentAge;
    private javax.swing.JTextField txtResidentEmail;
    private javax.swing.JTextField txtResidentID;
    private javax.swing.JTextField txtResidentName;
    private javax.swing.JTextField txtResidentPhoneNumber;
    private javax.swing.JTextField txtSearchComplaint;
    private javax.swing.JTextField txtSearchEmployee1;
    private javax.swing.JTextField txtSearchResident;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables
}
